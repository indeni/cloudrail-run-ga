name: 'Cloudrail run GitHub action'
description: 'An easy way to run Cloudrail with a specific Terraform plan'
branding:
  icon: check
  color: blue
inputs:
  tf-plan-file:
    description: 'The location of the plan.out file generated with "terraform plan -out=plan.out"'
    required: true
  cloudrail-api-key:
    description: 'Your Cloudrail API key'
    required: true
  working-directory:
    description: 'The working directory to use'
    required: true
    default: '.'
  cloud-account-id:
    description: 'The identifier of the cloud account you have run the Terraform plan against. Set to empty string if you would like to run without using a cloud account.'
    required: true
runs:
  using: "composite"
  steps:
    - run: docker pull indeni/cloudrail-cli
      shell: bash

    - run: |
        INPUT_CLOUD_ACCOUNT_ID='${{ inputs.cloud-account-id}}'
        INPUT_CLOUD_ACCOUNT_ID_NO_WHITESPACE="$(echo -e "${INPUT_CLOUD_ACCOUNT_ID}" | tr -d '[:space:]')"

        if [ -z "$INPUT_CLOUD_ACCOUNT_ID_NO_WHITESPACE" ]; then
          CLOUD_ARGUMENT="--no-cloud-account"
        else
          CLOUD_ARGUMENT="--cloud-account-id $INPUT_CLOUD_ACCOUNT_ID_NO_WHITESPACE"
        fi

        # Note, we need "--user root" because otherwise we run into permission issues: https://stackoverflow.com/questions/58921029/github-actions-cannot-write-to-file-permission-denied-inside-the-docker-contai
        docker run --rm --user root -v $PWD:/data:rw indeni/cloudrail-cli run --tf-plan ${{ inputs.tf-plan-file}} --api-key ${{ inputs.cloudrail-api-key }} ${CLOUD_ARGUMENT} --origin ci --build-link "https://github.com/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID"  --execution-source-identifier "$GITHUB_REF - $GITHUB_RUN_NUMBER" --output-file "cloudrail_results.sarif" --output-format sarif --auto-approve
      shell: bash
      working-directory: ${{ inputs.working-directory }}
